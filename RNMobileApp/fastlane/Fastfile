platform :ios do
  desc 'Fetch certificates and provisioning profiles'
  lane :certificates do
    token = Spaceship::ConnectAPI::Token.create(
      key_id: ENV['APP_STORE_API_KEY'],
      issuer_id: ENV['APP_STORE_API_KEY_ISSUER_ID'],
      filepath: File.absolute_path('../authkey.p8'),
      in_house: false
    )

    Spaceship::ConnectAPI.token = token

    match(app_identifier: ENV['APP_STORE_BUNDLE_ID'])
  end

  desc 'Fetch certificates. Build the iOS application.'
  lane :build do
    certificates

    gym(
      scheme: 'RNMobileApp',
      workspace: './ios/RNMobileApp.xcworkspace',
      export_method: 'app-store'
    )
  end

  desc 'Build and Deploy to test flight'
  lane :deploy_to_test_flight do
    increment_build_number({
      build_number: latest_testflight_build_number + 1
    })

    build

    api_key = app_store_connect_api_key(
      key_id: ENV['APP_STORE_API_KEY'],
      issuer_id: ENV['APP_STORE_API_KEY_ISSUER_ID'],
      key_filepath: './authkey.p8',
      duration: 1200,
      in_house: false
    )

    upload_to_testflight(
      api_key: api_key,
      changelog: ENV['APP_TEST_FLIGHT_CHANGE_LOG'],
      skip_waiting_for_build_processing: true,
      notify_external_testers: true
    )
  end
end

platform :android do
  desc 'Build the Android application.'
  lane :build do
    gradle(task: 'clean', project_dir: 'android/')
    gradle(task: 'bundle', build_type: 'release', project_dir: 'android/')
  end
end
