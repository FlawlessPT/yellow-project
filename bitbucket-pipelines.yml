image: node:18

definitions:
  caches:
    yarn: /usr/local/share/.cache/yarn
    gradle: ~/.gradle/caches
    gradle-wrapper: ~/.gradle/wrapper
    node: /usr/local/lib/node_modules

pipelines:
  pull-requests:
    '**':
      - parallel:
          steps:
            - step:
                name: Backoffice lint and type checks
                condition:
                  changesets:
                    includePaths:
                      - "BackofficeCMS/**"
                caches:
                  - yarn
                script:
                  - cd supabase
                  - yarn install --frozen-lockfile
                  - yarn supabase-configs-backoffice true
                  - cd ../BackofficeCMS
                  - yarn install --frozen-lockfile
                  - yarn type-check
                  - yarn lint

            - step:
                name: Mobile app lint and type checks
                condition:
                  changesets:
                    includePaths:
                      - "RNMobileApp/**"
                caches:
                  - yarn
                script:
                  - cd supabase
                  - yarn install --frozen-lockfile
                  - yarn supabase-configs-mobile true
                  - cd ../RNMobileApp
                  - yarn install --frozen-lockfile
                  - yarn type-check
                  - yarn lint

      - step:
          name: 'Deployment of Backoffice web app to preview'
          condition:
            changesets:
              includePaths:
                - "BackofficeCMS/**"
          caches:
            - yarn
            - node
          deployment: backoffice-staging
          script:
            - export SUPABASE_DB_PASSWORD=$SUPABASE_DB_PASSWORD_STAGING
            - export SUPABASE_URL=$SUPABASE_PROJECT_URL_STAGING
            - export SUPABASE_API_KEY=$SUPABASE_API_KEY_STAGING
            - cd supabase
            - yarn install --frozen-lockfile
            - yarn supabase-configs
            - cd ../BackofficeCMS
            - yarn install --frozen-lockfile
            - npm install --global vercel
            - vercel pull --yes --environment=preview --token=$VERCEL_TOKEN
            - vercel build --token=$VERCEL_TOKEN
            - vercel deploy --prebuilt  --token=$VERCEL_TOKEN

  branches:
    main:
      - parallel:
          steps:
          - step:
              name: Backoffice lint and type checks
              condition:
                changesets:
                  includePaths:
                    - "BackofficeCMS/**"
              caches:
                - yarn
              script:
                - cd supabase
                - yarn install --frozen-lockfile
                - yarn supabase-configs-backoffice true
                - cd ../BackofficeCMS
                - yarn install --frozen-lockfile
                - yarn type-check
                - yarn lint

          - step:
              name: Mobile app lint and type checks
              condition:
                changesets:
                  includePaths:
                    - "RNMobileApp/**"
              caches:
                - yarn
              script:
                - cd supabase
                - yarn install --frozen-lockfile
                - yarn supabase-configs-mobile true
                - cd ../RNMobileApp
                - yarn install --frozen-lockfile
                - yarn type-check
                - yarn lint

      - step:
          name: 'Deployment of Backoffice web app to staging'
          condition:
            changesets:
              includePaths:
                - "BackofficeCMS/**"
          caches:
            - yarn
            - node
          deployment: backoffice-staging
          script:
            - export SUPABASE_DB_PASSWORD=$SUPABASE_DB_PASSWORD_STAGING
            - export SUPABASE_URL=$SUPABASE_PROJECT_URL_STAGING
            - export SUPABASE_API_KEY=$SUPABASE_API_KEY_STAGING
            - cd supabase
            - yarn install --frozen-lockfile
            - yarn supabase-configs-backoffice
            - npx supabase link --project-ref $SUPABASE_PROJECT_ID_STAGING
            - npx supabase db push
            - cd ../BackofficeCMS
            - yarn install --frozen-lockfile
            - npm install --global vercel
            - vercel pull --yes --token=$VERCEL_TOKEN
            - vercel build --prod --token=$VERCEL_TOKEN
            - vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN

      - step:
          name: 'Deployment of Android App to staging'
          condition:
            changesets:
              includePaths:
                - "RNMobileApp/**"
          max-time: 30
          caches:
            - yarn
            - gradle
            - gradle-wrapper
            - node
          deployment: android-staging
          image: reactnativecommunity/react-native-android:latest
          size: 2x
          artifacts:
            - RNMobileApp/android/app/build/outputs/**
          script:
            - export SUPABASE_DB_PASSWORD=$SUPABASE_DB_PASSWORD_STAGING
            - export SUPABASE_URL=$SUPABASE_PROJECT_URL_STAGING
            - export SUPABASE_API_KEY=$SUPABASE_API_KEY_STAGING
            - cd supabase
            - yarn install --frozen-lockfile
            - yarn supabase-configs-mobile
            - npx supabase link --project-ref $SUPABASE_PROJECT_ID_STAGING
            - npx supabase db push
            - cd ../RNMobileApp
            - yarn install --frozen-lockfile
            - cd android && chmod +x gradlew
            # following suggestion here to pass version code and name: https://stackoverflow.com/a/36221899
            - ./gradlew assembleRelease -PversionCode=$BITBUCKET_BUILD_NUMBER -PversionName=$BITBUCKET_COMMIT
            - npm install -g appcenter-cli
            - appcenter distribute release --app $APP_CENTER_PROJECT --file ./app/build/outputs/apk/release/app-release.apk --group "Collaborators" --token $APP_CENTER_TOKEN

      - step:
          name: 'Deployment of Backoffice web app to production'
          caches:
            - yarn
            - node
          deployment: backoffice-production
          trigger: 'manual'
          script:
            - export SUPABASE_DB_PASSWORD=$SUPABASE_DB_PASSWORD_PRODUCTION
            - export SUPABASE_URL=$SUPABASE_PROJECT_URL_PRODUCTION
            - export SUPABASE_API_KEY=$SUPABASE_API_KEY_PRODUCTION
            - cd supabase
            - yarn install --frozen-lockfile
            - yarn supabase-configs-backoffice
            - npx supabase link --project-ref $SUPABASE_PROJECT_ID_PRODUCTION
            - npx supabase db push
            - cd ../BackofficeCMS
            - yarn install --frozen-lockfile
            - npm install --global vercel
            - vercel pull --yes --environment=production --token=$VERCEL_TOKEN
            - vercel build --prod --token=$VERCEL_TOKEN
            - vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN
