image: node:18

definitions:
  caches:
    yarn: /usr/local/share/.cache/yarn
    gradle: ~/.gradle/caches
    gradle-wrapper: ~/.gradle/wrapper
    node: /usr/local/lib/node_modules
    bundler: /var/lib/gems

pipelines:
  pull-requests:
    '**':
      - parallel:
          steps:
            - step:
                name: Backoffice lint and type checks
                condition:
                  changesets:
                    includePaths:
                      - "BackofficeCMS/**"
                caches:
                  - yarn
                script:
                  - cd supabase
                  - yarn install --frozen-lockfile
                  - yarn supabase-configs-backoffice true
                  - cd ../BackofficeCMS
                  - yarn install --frozen-lockfile
                  - yarn type-check
                  - yarn lint

            - step:
                name: Mobile app lint and type checks
                condition:
                  changesets:
                    includePaths:
                      - "RNMobileApp/**"
                caches:
                  - yarn
                script:
                  - cd supabase
                  - yarn install --frozen-lockfile
                  - yarn supabase-configs-mobile true
                  - cd ../RNMobileApp
                  - yarn install --frozen-lockfile
                  - yarn type-check
                  - yarn lint

      - step:
          name: 'Deployment of Backoffice web app to preview'
          condition:
            changesets:
              includePaths:
                - "BackofficeCMS/**"
          caches:
            - yarn
            - node
          deployment: backoffice-staging
          script:
            - export SUPABASE_DB_PASSWORD=$SUPABASE_DB_PASSWORD_STAGING
            - export SUPABASE_URL=$SUPABASE_PROJECT_URL_STAGING
            - export SUPABASE_API_KEY=$SUPABASE_API_KEY_STAGING
            - export VITE_SENTRY_DSN=$SENTRY_DSN_BACKOFFICE
            - export VITE_SUPABASE_PROJECT_URL=$SUPABASE_PROJECT_URL_STAGING
            - export VITE_SENTRY_ENVIRONMENT=preview-$BITBUCKET_BRANCH
            - export SENTRY_PROJECT=$SENTRY_PROJECT_BACKOFFICE
            - cd supabase
            - yarn install --frozen-lockfile
            - yarn supabase-configs
            - cd ../BackofficeCMS
            - yarn install --frozen-lockfile
            - npm install --global vercel
            - vercel pull --yes --environment=preview --token=$VERCEL_TOKEN
            - vercel build --token=$VERCEL_TOKEN
            - vercel deploy --prebuilt  --token=$VERCEL_TOKEN

      - step:
          name: 'Deployment of Android App to preview'
          condition:
            changesets:
              includePaths:
                - "RNMobileApp/**"
          max-time: 30
          caches:
            - yarn
            - gradle
            - gradle-wrapper
            - bundler
            - node
          deployment: android-preview
          trigger: 'manual'
          image: reactnativecommunity/react-native-android:latest
          size: 2x
          script:
            - export SUPABASE_URL=$SUPABASE_PROJECT_URL_STAGING
            - export SUPABASE_API_KEY=$SUPABASE_API_KEY_STAGING
            - export SENTRY_PROJECT=$SENTRY_PROJECT_RNAPP
            # https://docs.fastlane.tools/getting-started/ios/setup/#set-up-environment-variables
            - export LC_ALL=en_US.UTF-8
            - export LANG=en_US.UTF-8
            - gem install fastlane
            - cd supabase
            - yarn install --frozen-lockfile
            - yarn supabase-configs-mobile
            - cd ../RNMobileApp
            - yarn install --frozen-lockfile
            - echo "VERSION_CODE=$BITBUCKET_BUILD_NUMBER" >> .env
            - echo "VERSION_NAME=preview-$BITBUCKET_BRANCH-$BITBUCKET_COMMIT" >> .env
            - echo "SENTRY_DSN=$SENTRY_DSN_RNAPP" >> .env
            - echo "SENTRY_ENVIRONMENT=preview-$BITBUCKET_BRANCH" >> .env
            - echo "ANDROID_APPLICATION_ID=$ANDROID_APPLICATION_ID" >> .env
            - cd android
            - echo $ANDROID_KEY_STORE_64 | base64 -d > app/my-upload-key.keystore
            - echo "MYAPP_UPLOAD_STORE_FILE=my-upload-key.keystore" >> gradle.properties
            - echo "MYAPP_UPLOAD_KEY_ALIAS=my-key-alias" >> gradle.properties
            - echo "MYAPP_UPLOAD_STORE_PASSWORD=$ANDROID_KEY_STORE_PASSWORD" >> gradle.properties
            - echo "MYAPP_UPLOAD_KEY_PASSWORD=$ANDROID_KEY_STORE_PASSWORD" >> gradle.properties
            - cd ..
            - fastlane android build
            - npm install -g appcenter-cli
            - appcenter distribute release --app $APP_CENTER_PROJECT --file ./android/app/build/outputs/bundle/release/app-release.aab --group "Collaborators" --token $APP_CENTER_TOKEN

      - step:
          name: 'Deployment of IOS App to preview'
          condition:
            changesets:
              includePaths:
                - "RNMobileApp/**"
          runs-on:
            - self.hosted
            - macos
          deployment: ios-preview
          trigger: 'manual'
          script:
            - export APP_TEST_FLIGHT_CHANGE_LOG='Preview app from branch $BITBUCKET_BRANCH and commit $BITBUCKET_COMMIT, build $BITBUCKET_BUILD_NUMBER'
            - export SUPABASE_DB_PASSWORD=$SUPABASE_DB_PASSWORD_STAGING
            - export SUPABASE_URL=$SUPABASE_PROJECT_URL_STAGING
            - export SUPABASE_API_KEY=$SUPABASE_API_KEY_STAGING
            - export SENTRY_PROJECT=$SENTRY_PROJECT_RNAPP
            - cd supabase
            - yarn install --frozen-lockfile
            - yarn supabase-configs-mobile
            - cd ../RNMobileApp
            - echo "SENTRY_DSN=$SENTRY_DSN_RNAPP" >> .env
            - echo "SENTRY_ENVIRONMENT=preview-$BITBUCKET_BRANCH" >> .env
            - echo '-----BEGIN PRIVATE KEY-----' >> authkey.p8
            - echo $APP_STORE_AUTH_KEY_P8 >> authkey.p8
            - echo '-----END PRIVATE KEY-----' >> authkey.p8
            - yarn install
            - yarn ios:clean:pod-install
            - fastlane ios deploy_to_test_flight

  branches:
    main:
      - parallel:
          steps:
          - step:
              name: Backoffice lint and type checks
              condition:
                changesets:
                  includePaths:
                    - "BackofficeCMS/**"
              caches:
                - yarn
              script:
                - cd supabase
                - yarn install --frozen-lockfile
                - yarn supabase-configs-backoffice true
                - cd ../BackofficeCMS
                - yarn install --frozen-lockfile
                - yarn type-check
                - yarn lint

          - step:
              name: Mobile app lint and type checks
              condition:
                changesets:
                  includePaths:
                    - "RNMobileApp/**"
              caches:
                - yarn
              script:
                - cd supabase
                - yarn install --frozen-lockfile
                - yarn supabase-configs-mobile true
                - cd ../RNMobileApp
                - yarn install --frozen-lockfile
                - yarn type-check
                - yarn lint

      - step:
          name: 'Deployment of supabase changes to staging'
          caches:
            - yarn
            - node
          deployment: supabase-staging
          script:
            - export SUPABASE_DB_PASSWORD=$SUPABASE_DB_PASSWORD_STAGING
            - cd supabase
            - npx supabase link --project-ref $SUPABASE_PROJECT_ID_STAGING
            - npx supabase db push

      - step:
          name: 'Deployment of Backoffice web app to staging'
          condition:
            changesets:
              includePaths:
                - "BackofficeCMS/**"
          caches:
            - yarn
            - node
          deployment: backoffice-staging
          script:
            - export SUPABASE_URL=$SUPABASE_PROJECT_URL_STAGING
            - export SUPABASE_API_KEY=$SUPABASE_API_KEY_STAGING
            - export VITE_SENTRY_DSN=$SENTRY_DSN_BACKOFFICE
            - export VITE_SUPABASE_PROJECT_URL=$SUPABASE_PROJECT_URL_STAGING
            - export VITE_SENTRY_ENVIRONMENT=staging
            - export SENTRY_PROJECT=$SENTRY_PROJECT_BACKOFFICE
            - cd supabase
            - yarn install --frozen-lockfile
            - yarn supabase-configs-backoffice
            - cd ../BackofficeCMS
            - yarn install --frozen-lockfile
            - npm install --global vercel
            - vercel pull --yes --token=$VERCEL_TOKEN
            - vercel build --prod --token=$VERCEL_TOKEN
            - vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN

      - step:
          name: 'Deployment of Android App to staging'
          condition:
            changesets:
              includePaths:
                - "RNMobileApp/**"
          max-time: 30
          caches:
            - yarn
            - gradle
            - gradle-wrapper
            - bundler
            - node
          deployment: android-staging
          image: reactnativecommunity/react-native-android:latest
          size: 2x
          script:
            - export SUPABASE_URL=$SUPABASE_PROJECT_URL_STAGING
            - export SUPABASE_API_KEY=$SUPABASE_API_KEY_STAGING
            - export SENTRY_PROJECT=$SENTRY_PROJECT_RNAPP
            # https://docs.fastlane.tools/getting-started/ios/setup/#set-up-environment-variables
            - export LC_ALL=en_US.UTF-8
            - export LANG=en_US.UTF-8
            - gem install fastlane
            - cd supabase
            - yarn install --frozen-lockfile
            - yarn supabase-configs-mobile
            - cd ../RNMobileApp
            - yarn install --frozen-lockfile
            - echo "VERSION_CODE=$BITBUCKET_BUILD_NUMBER" >> .env
            - echo "VERSION_NAME=$BITBUCKET_COMMIT" >> .env
            - echo "SENTRY_DSN=$SENTRY_DSN_RNAPP" >> .env
            - echo "SENTRY_ENVIRONMENT=staging" >> .env
            - echo "ANDROID_APPLICATION_ID=$ANDROID_APPLICATION_ID" >> .env
            - cd android
            - echo $ANDROID_KEY_STORE_64 | base64 -d > app/my-upload-key.keystore
            - echo "MYAPP_UPLOAD_STORE_FILE=my-upload-key.keystore" >> gradle.properties
            - echo "MYAPP_UPLOAD_KEY_ALIAS=my-key-alias" >> gradle.properties
            - echo "MYAPP_UPLOAD_STORE_PASSWORD=$ANDROID_KEY_STORE_PASSWORD" >> gradle.properties
            - echo "MYAPP_UPLOAD_KEY_PASSWORD=$ANDROID_KEY_STORE_PASSWORD" >> gradle.properties
            - cd ..
            - fastlane android build
            - npm install -g appcenter-cli
            - appcenter distribute release --app $APP_CENTER_PROJECT --file ./android/app/build/outputs/bundle/release/app-release.aab --group "Collaborators" --token $APP_CENTER_TOKEN

      - step:
          name: 'Deployment of IOS App to staging'
          condition:
            changesets:
              includePaths:
                - "RNMobileApp/**"
          runs-on:
            - self.hosted
            - macos
          deployment: ios-staging
          script:
            - export APP_TEST_FLIGHT_CHANGE_LOG='Staging app from main and commit $BITBUCKET_COMMIT, build $BITBUCKET_BUILD_NUMBER'
            - export SUPABASE_DB_PASSWORD=$SUPABASE_DB_PASSWORD_STAGING
            - export SUPABASE_URL=$SUPABASE_PROJECT_URL_STAGING
            - export SUPABASE_API_KEY=$SUPABASE_API_KEY_STAGING
            - export SENTRY_PROJECT=$SENTRY_PROJECT_RNAPP
            - cd supabase
            - yarn install --frozen-lockfile
            - yarn supabase-configs-mobile
            - cd ../RNMobileApp
            - echo "SENTRY_DSN=$SENTRY_DSN_RNAPP" >> .env
            - echo "SENTRY_ENVIRONMENT=preview-$BITBUCKET_BRANCH" >> .env
            - echo '-----BEGIN PRIVATE KEY-----' >> authkey.p8
            - echo $APP_STORE_AUTH_KEY_P8 >> authkey.p8
            - echo '-----END PRIVATE KEY-----' >> authkey.p8
            - yarn install
            - yarn ios:clean:pod-install
            - fastlane ios deploy_to_test_flight

      - step:
          name: 'Deployment of supabase changes to production'
          caches:
            - yarn
            - node
          deployment: supabase-production
          trigger: 'manual'
          script:
            - export SUPABASE_DB_PASSWORD=$SUPABASE_DB_PASSWORD_PRODUCTION
            - cd supabase
            - npx supabase link --project-ref $SUPABASE_PROJECT_ID_PRODUCTION
            - npx supabase db push

      - step:
          name: 'Deployment of Backoffice web app to production'
          caches:
            - yarn
            - node
          deployment: backoffice-production
          trigger: 'manual'
          script:
            - export SUPABASE_URL=$SUPABASE_PROJECT_URL_PRODUCTION
            - export SUPABASE_API_KEY=$SUPABASE_API_KEY_PRODUCTION
            - export VITE_SENTRY_DSN=$SENTRY_DSN_BACKOFFICE
            - export VITE_SUPABASE_PROJECT_URL=$SUPABASE_PROJECT_URL_PRODUCTION
            - export VITE_SENTRY_ENVIRONMENT=production
            - export SENTRY_PROJECT=$SENTRY_PROJECT_BACKOFFICE
            - cd supabase
            - yarn install --frozen-lockfile
            - yarn supabase-configs-backoffice
            - cd ../BackofficeCMS
            - yarn install --frozen-lockfile
            - npm install --global vercel
            - vercel pull --yes --environment=production --token=$VERCEL_TOKEN
            - vercel build --prod --token=$VERCEL_TOKEN
            - vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN
